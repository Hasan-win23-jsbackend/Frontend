@using System.Net.Http.Headers

@attribute [StreamRendering]


@if (user == null)
{
    <p>Loading...</p>
}
else
{
    <section class="account-profile">
        <div class="profile">
            <div class="profile-image">
                <img src="/images/uploads/profiles/@user.ProfileImage" alt="@user.FirstName @user.LastName" />

                <EditForm Model="@uploadModel" FormName="ProfileUpload" OnInvalidSubmit="HandleProfileUpload">
                    <InputFile id="fileUploader" OnChange="HandleFileSelected" hidden />
                    <label for="fileUploader" class="btn btn-circle btn-circle-sm"><i class="fa-regular fa-refresh"></i> </label>
                </EditForm>
                
            </div>
            <div class="profile-info">
                <h3 class="displayname">@user.FirstName @user.LastName</h3>
                <p>@user.Email</p>
            </div>
        </div>
    </section>
}


    

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    [Parameter]
    public ApplicationUser user { get; set; } = default!;
    private MultipartFormDataContent uploadModel = new MultipartFormDataContent();
    private IBrowserFile? selectedFile;

    

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }
    private async Task LoadUserDataAsync()
    {
        user = await UserManager.GetUserAsync(HttpContext.User) ?? null!;
    }
    public async Task HandleProfileUpload()
    {
        if(selectedFile != null)
        {
            using var content = new MultipartFormDataContent();
            var fileContent = new StreamContent(selectedFile.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(selectedFile.ContentType);
            content.Add(fileContent, "file", selectedFile.Name);
            try
            {
                var response = await Http.PostAsync("https://fileprovider-win23jsbackend-hasan.azurewebsites.net/api/upload", content);
                if (response.IsSuccessStatusCode)
                {
                    await LoadUserDataAsync();
                    StateHasChanged();
                }
            }catch (Exception ex)
            {
                
            }

        }
    }
}

 